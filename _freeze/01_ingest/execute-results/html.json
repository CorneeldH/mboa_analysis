{
  "hash": "d84fa25c3e94fee7eb886b46ddfb36bd",
  "result": {
    "engine": "knitr",
    "markdown": "---\neditor: source\n---\n\n\n\n\n\n\n\n# Inladen en voorbereiden\n\nVoordat we met de analyse beginnen, lade we eerst de data in. De functies hiervoor zijn te vinden in R/ingest.R.\n\nNaast het inladen van de data, wordt ook data geprepareerd. Soms is dit een afgeleide variabele maken, maar het kan ook zijn dat de data wordt omgezet naar een ander detailniveau (bijvoorbeeld van een tabel met per regel een status, naar een tabel met per regel een verbintenis en kolommen met info per status). Deze functies zijn de vinden in R/prepare.R.\n\n## Alles gerelateerd aan verbintenissen (enrollments) inladen en voorbereiden.\n\nWe laden eerst alle data in die al op verbintenis-niveau is. Een aantal tabellen zijn niet op verbintenis-niveau en bevatten ook geen verbintenis ID. Deze tabellen transformeren we naar student-jaar om het zo te kunnen koppelen aan verbintenis. Tenslotte zijn er nog een aantal mapping tables met extra informatie over een specifieke aspecten van een verbintenis.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenrollments_basics <- ingest_enrollments_basics() |>\n    #'*INFO* prepare derived variables regarding 'studiesucces' after combining data with programmes\n    combine_enrollment_numbers_for_order()\nenrollments_level <- ingest_enrollments_level() |>\n    parse_enrollment_level()\nenrollments_flex <- ingest_enrollments_flex() |>\n    create_flex_boolean()\nenrollments_special_needs <- ingest_enrollments_special_needs() |>\n    summarise_special_needs()\nenrollments_study_advices <- ingest_study_advices() |>\n    transform_advices_to_enrollments()\nenrollments_application <- ingest_enrollments_application() |>\n    calculate_application_duration()\n\n# BPV statusses transformed\nbpv_registrations <- ingest_bpv_registrations()\nbpv_statusses <- ingest_bpv_statusses()\n\nenrollments_bpv <- bpv_statusses |>\n    left_join(bpv_registrations,\n              by = join_by(BPV_ID),\n              relationship = \"many-to-one\") |>\n    convert_bpv_status_types() |>\n    transform_bpv_statusses_to_enrollments() \n\n#' *INFO* An enrollment can be longer or shorter than one year\n# TODO Make extra calculations regarding demographics\nstudent_years_demographics <- ingest_students_demographics() |>\n    transform_students_to_student_year()\nstudent_years_prior_education <- ingest_students_prior_education() |>\n    transform_prior_education_to_student_year() |>\n    transform_prior_education_vo_and_highest_degree()\n\n# Additional mapping tables\nreasons_for_leaving <- ingest_reasons_for_leaving() |>\n    distinct()\ncohorts <- ingest_cohorts() |>\n    filter_cohorts() |>\n    add_cohort_start_date()\n# The following data is also linked to enrollments foremost, not programmes\nteams <- ingest_teams()\nlocations <- ingest_locations()\n\n# Programmes\nprogrammes_exam_plan <- ingest_exam_plans() |> \n    summarise_plan_dates_to_programmes()\nprogrammes_basics <- ingest_programmes_basics()\nprogramme_bc_codes <- ingest_programme_bc_codes()\n```\n:::\n\n\n\n\n## Alles gerelateerd aan medewerkers (employees)\n\nWe laden eerst informatie uit medewerkers contracten in. Deze data is per jaar aangeleverd met peildatum 1 oktober. Naast de contracten, zijn er ook componenten met aanpassingen. Tenslotte is er informatie over het verzuim van medewerkers. Deze zetten we om naar wekelijkse verzuimpercentages en één tabel per schooljaar.\n\n\n\n\n::: {.cell freeze='true'}\n\n```{.r .cell-code}\nemployees_contract <- bind_rows(\n    ingest_employees_contract_basics_2023(),\n    ingest_employees_contract_basics_2022(),\n    ingest_employees_contract_basics_2021(),\n    ingest_employees_contract_basics_2020(),\n    ingest_employees_contract_basics_2019()\n)\n\nemployees_contract_extra_fte <- bind_rows(\n    ingest_job_components_extra_fte_2023(),\n    ingest_job_components_extra_fte_2022(),\n    ingest_job_components_extra_fte_2021(),\n    ingest_job_components_extra_fte_2020(),\n    ingest_job_components_extra_fte_2019()\n) |>\n    summarise_components_to_employees()\n\n# Within map to keep the transformations separate by years, this makes it less memory intensive\nemployees_absence_yearly <- ingest_employee_absences() |>\n    distinct() |>\n    convert_absence_types() |>\n    split_absences_into_school_years() |>\n    map(expand_to_daily) |>\n    map(summarise_employee_absence_to_years) |>\n    #map(summarise_employee_absence_to_weeks) |>\n    #map(pivot_weeks_to_years) |>\n    map_dfr(bind_rows)\n```\n:::\n\n\n\n\n## Alles gerelateerd aan officiële rendementen\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nteams_results_retention_start <- ingest_teams_results_retention_start()\n```\n:::\n\n\n\n\n## Alles gerelateerd aan groepen en absenties\n\n\n\n\n::: {.cell freeze='true'}\n\n```{.r .cell-code}\nattendance_observations <- ingest_attendance_observations() #|>\n    #transform_observations_to_enrollments()\n\n# attendance_observations %>% mutate(jaar = get_school_year(Datum)) %>% tabyl(jaar)\n#      jaar       n    percent\n# 2021/2022 6146808 0.32698424\n# 2022/2023 5592001 0.29747085\n# 2023/2024 5303850 0.28214243\n# 2024/2025 1755825 0.09340248\n\nenrollment_to_sk_mapping <- ingest_enrollment_to_sk_mapping()\ngroup_placements <- ingest_group_placements()\n\n\ngroup_placements_enriched <- group_placements |>\n    # Enrollments absences only have SK_inschrijving that started over 2018, therefore this\n    # inner join removes half of rows\n    inner_join(enrollment_to_sk_mapping,\n               by = join_by(SK_inschrijving),\n               relationship = \"many-to-one\")\n\nattendance_observations_enriched <- attendance_observations |>\n    # I lose ~2400 enrollments\n    # maybe these are students from before 2018, mabye some are filtered in data warehouse \n    inner_join(group_placements_enriched,\n                by = join_by(SK_GroepInschrijving == SK_groep_inschrijving),\n               relationship = \"many-to-one\")\n\n# for enrollments per week\n# enrollments_attendance_weekly <- attendance_observations_enriched |>\n#     summarise_observations_to_weekly_attendance() |>\n#     transform_attendance_weekly_to_enrollments()\n\nenrollments_attendance_yearly <- attendance_observations_enriched |>\n    split_observations_in_school_years() |>\n    map(summarise_observations_to_yearly_attendance) |>\n    map_dfr(bind_rows)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nteams_results_retention_start_prepared <- teams_results_retention_start |>\n    mutate(SCHOOLJAAR_naam = str_replace(SCHOOLJAAR_naam, \" - \", \"/\"),\n           TEAM_startersresultaat_1_jaars = parse_number(TEAM_startersresultaat_1_jaars) * 100\n           )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}