---
title: "How To"
number: false
author: "Corneel den Hartogh"
date: last-modified
toc: true
format: 
  html:
    code-link: true
editor: source
execute:
  cache: true
  freeze: auto
---

## How To

Deze gids laat zien hoe stap voor stap de exports uit het data warehouse worden bewerkt in R tot diverse statistische analyses. Het begint met uitleg van de project setup in R, daarna wordt de data ingelezen en geprepareerd. Vervolgens combineren we de data tot een zogenoemde data asset, die klaar is voor analyse. Dan komen de diverse analyses.

### 0. Project Setup

#### 0.1. Opzetten renv

R maakt gebruik van packages om extra functionaliteit te bieden. Renv houdt bij welke packages er zijn geinstalleerd en welke versie. Dit zorgt ervoor dat de analyses in de toekomst reproduceerbaar zijn.

De eerste keer dat je het proejct opent, moet je renv initialiseren met de volgende code. Voor meer informatie over renv, zie de [documentatie](https://rstudio.github.io/renv/articles/renv.html).

```{r}
#| cache: false
#| output: false

if (!requireNamespace("renv")) {
  install.packages("renv")
  renv::init()
} 

```

#### 0.2. Zet je R omgeving klaar

Zodra renv werkt kunnen we de packages installeren en inladen. De eerste keer duurt het inladen even, omdat de packages nog geinstalleerd moeten worden. De volgende keren hoeven de packages alleen nog maar ingeladen te worden. Dat gaat erg snel.

Naast de packages, laden we ook all functies in die we in dit project gemaakt hebben. Deze functies kun je vinden in de map /R.

```{r}
#| cache: false
#| output: false

source("utils/manage_packages.R")
load_all()

```

#### 0.3. Configureer je data verbindingen en settings

Om de scripts voor elke instelling te laten draaien, gebruiken we het config-pakket om specifieke instellingen te bepalen. Het enige wat je hoeft te doen is het [**config.yml**](config.yml) bestand in de hoofdmap aanpassen. Je ziet de 'default' en instellingen. Je kunt je eigen onderwijsinstelling toevoegen.

Je hoeft alleen configuraties toe te voegen die anders zijn dan de standaardinstellingen. Het neemt andere instellingen over. Werk de actieve configuratie bij met je nieuwe configuratie (of voer de code uit met de standaard, de, default instellingen). Voor meer informatie over config, zie hun [documentatie](https://rstudio.github.io/config/).

```{r}
#| cache: false

# TODO Change default in own config if needed
Sys.setenv(R_CONFIG_ACTIVE = "default")

```

### 1. Inladen en voorbereiden

Voordat we met de analyse beginnen, lade we eerst de data in. De functies hiervoor zijn te vinden in R/ingest.R.

Naast het inladen van de data, wordt ook data geprepareerd. Soms is dit een afgeleide variabele maken, maar het kan ook zijn dat de data wordt omgezet naar een ander detailniveau (bijvoorbeeld van een tabel met per regel een status, naar een tabel met per regel een verbintenis en kolommen met info per status). Deze functies zijn de vinden in R/prepare.R.

#### 1.1 Alles gerelateerd aan verbintenissen (enrollments) inladen en voorbereiden.

We laden eerst alle data in die al op verbintenis-niveau is. Een aantal tabellen zijn niet op verbintenis-niveau en bevatten ook geen verbintenis ID. Deze tabellen transformeren we naar student-jaar om het zo te kunnen koppelen aan verbintenis. Tenslotte zijn er nog een aantal mapping tables met extra informatie over een specifieke aspecten van een verbintenis.

```{r}

enrollments_basics <- ingest_enrollments_basics() |>
    #'*INFO* prepare derived variables regarding 'studiesucces' after combining data with programmes
    combine_enrollment_numbers_for_order()
enrollments_level <- ingest_enrollments_level() |>
    parse_enrollment_level()
enrollments_flex <- ingest_enrollments_flex() |>
    create_flex_boolean()
enrollments_special_needs <- ingest_enrollments_special_needs() |>
    summarise_special_needs()
enrollments_study_advices <- ingest_study_advices() |>
    transform_advices_to_enrollments()
enrollments_application <- ingest_enrollments_application() |>
    calculate_application_duration()

# BPV statusses transformed
bpv_registrations <- ingest_bpv_registrations()
bpv_statusses <- ingest_bpv_statusses()

enrollments_bpv <- bpv_statusses |>
    left_join(bpv_registrations,
              by = join_by(BPV_ID),
              relationship = "many-to-one") |>
    convert_bpv_status_types() |>
    transform_bpv_statusses_to_enrollments() 

#' *INFO* An enrollment can be longer or shorter than one year
# TODO Make extra calculations regarding demographics
student_years_demographics <- ingest_students_demographics() |>
    transform_students_to_student_year()
student_years_prior_education <- ingest_students_prior_education() |>
    transform_prior_education_to_student_year() |>
    transform_prior_education_vo_and_highest_degree()

# Additional mapping tables
reasons_for_leaving <- ingest_reasons_for_leaving() |>
    distinct()
cohorts <- ingest_cohorts() |>
    filter_cohorts() |>
    add_cohort_start_date()
# The following data is also linked to enrollments foremost, not programmes
teams <- ingest_teams()
locations <- ingest_locations()

# Programmes
programmes_exam_plan <- ingest_exam_plans() |> 
    summarise_plan_dates_to_programmes()
programmes_basics <- ingest_programmes_basics()
programme_bc_codes <- ingest_programme_bc_codes()

clear_script_objects()

```

#### 1.2 Alles gerelateerd aan medewerkers (employees)

We laden eerst informatie uit medewerkers contracten in. Deze data is per jaar aangeleverd met peildatum 1 oktober. Naast de contracten, zijn er ook componenten met aanpassingen. Tenslotte is er informatie over het verzuim van medewerkers. Deze zetten we om naar wekelijkse verzuimpercentages en één tabel per schooljaar.

```{r}
#| freeze: true

employees_contract <- bind_rows(
    ingest_employees_contract_basics_2023(),
    ingest_employees_contract_basics_2022(),
    ingest_employees_contract_basics_2021(),
    ingest_employees_contract_basics_2020(),
    ingest_employees_contract_basics_2019()
)

employees_contract_extra_fte <- bind_rows(
    ingest_job_components_extra_fte_2023(),
    ingest_job_components_extra_fte_2022(),
    ingest_job_components_extra_fte_2021(),
    ingest_job_components_extra_fte_2020(),
    ingest_job_components_extra_fte_2019()
) |>
    summarise_components_to_employees()

# Within map to keep the transformations separate by years, this makes it less memory intensive
employees_absence_yearly <- ingest_employee_absences() |>
    distinct() |>
    convert_absence_types() |>
    split_absences_into_school_years() |>
    map(expand_to_daily) |>
    map(summarise_employee_absence_to_years) |>
    #map(summarise_employee_absence_to_weeks) |>
    #map(pivot_weeks_to_years) |>
    map_dfr(bind_rows)

```

#### 1.3 Alles gerelateerd aan officiële rendementen

```{r}

teams_results_retention_start <- ingest_teams_results_retention_start()

```

#### 1.4 Alles gerelateerd aan groepen en absenties

```{r}
#| freeze: true
#| cache: false

attendance_observations <- ingest_attendance_observations() #|>
    #transform_observations_to_enrollments()

# attendance_observations %>% mutate(jaar = get_school_year(Datum)) %>% tabyl(jaar)
#      jaar       n    percent
# 2021/2022 6146808 0.32698424
# 2022/2023 5592001 0.29747085
# 2023/2024 5303850 0.28214243
# 2024/2025 1755825 0.09340248

enrollment_to_sk_mapping <- ingest_enrollment_to_sk_mapping()
group_placements <- ingest_group_placements()


group_placements_enriched <- group_placements |>
    # Enrollments absences only have SK_inschrijving that started over 2018, therefore this
    # inner join removes half of rows
    inner_join(enrollment_to_sk_mapping,
               by = join_by(SK_inschrijving),
               relationship = "many-to-one")

attendance_observations_enriched <- attendance_observations |>
    # I lose ~2400 enrollments
    # maybe these are students from before 2018, mabye some are filtered in data warehouse 
    inner_join(group_placements_enriched,
                by = join_by(SK_GroepInschrijving == SK_groep_inschrijving),
               relationship = "many-to-one")

# for enrollments per week
# enrollments_attendance_weekly <- attendance_observations_enriched |>
#     summarise_observations_to_weekly_attendance() |>
#     transform_attendance_weekly_to_enrollments()

enrollments_attendance_yearly <- attendance_observations_enriched |>
    split_observations_in_school_years() |>
    map(summarise_observations_to_yearly_attendance) |>
    map_dfr(bind_rows)
                
```

```{r}

teams_results_retention_start_prepared <- teams_results_retention_start |>
    mutate(SCHOOLJAAR_naam = str_replace(SCHOOLJAAR_naam, " - ", "/"),
           TEAM_startersresultaat_1_jaars = parse_number(TEAM_startersresultaat_1_jaars) * 100
           )

```

### 2. Combineren van alle data

```{r}

enrollments_combined <- enrollments_basics |>
    left_join(enrollments_level,
              by = join_by(VERBINTENIS_ID),
              relationship = "many-to-one") |>
    left_join(enrollments_flex,
              by = join_by(VERBINTENIS_ID),
              relationship = "many-to-one") |>
    left_join(enrollments_special_needs,
              by = join_by(VERBINTENIS_ID),
              relationship = "many-to-one") |>
    # TODO For now not used since data is incomplete
    # left_join(enrollments_ibp,
    #           by = join_by(VERBINTENIS_ID),
    #           relationship = "many-to-one") |>
    left_join(enrollments_application,
              by = join_by(VERBINTENIS_ID),
              relationship = "many-to-one") |>
    left_join(teams, 
              by = join_by(TEAM_ID), 
              relationship = "many-to-one") |>
    left_join(locations,
              by = join_by(LOCATIE_ID),
              relationship = "many-to-one") |>
    left_join(reasons_for_leaving,
              by = join_by(REDEN_UITSCHRIJVING_ID),
              relationship = "many-to-one") |>
    left_join(enrollments_bpv,
              by = join_by(VERBINTENIS_ID),
              relationship = "many-to-one") |>
    left_join(programmes_basics,
              by = join_by(OPLEIDING_ID),
              relationship = "many-to-one") |>
    left_join(programme_bc_codes, 
              by = join_by(OPLEIDING_code),
              relationship = "many-to-one") |>
    left_join(programmes_exam_plan,
              by = join_by(OPLEIDING_ID, COHORT_ID),
              relationship = "many-to-one") |>
    left_join(cohorts,
              by = join_by(COHORT_ID),
              relationship = "many-to-one") |>
    left_join(student_years_prior_education,
              by = join_by(DEELNEMER_ID, COHORT_naam),
              relationship = "many-to-one") |>
    left_join(student_years_demographics,
          by = join_by(DEELNEMER_ID, COHORT_naam),
          relationship = "many-to-one") |>
    left_join(enrollments_attendance_yearly,
              by = c("VERBINTENIS_ID", "COHORT_naam" = "SCHOOLJAAR_naam"),
              relationship = "one-to-one")

save_combined(enrollments_combined)

```

```{r}

employees_contract_enriched <- employees_contract |>
    left_join(employees_contract_extra_fte,
              by = join_by(MEDEWERKER_ID, 
                           MEDEWERKER_contract_kostenplaats_code, 
                           MEDEWERKER_contract_fte_peildatum),
              relationship = "one-to-one") |>
    add_school_year() |>
    left_join(employees_absence_yearly,
              by = join_by(MEDEWERKER_ID,
                           SCHOOLJAAR_naam),
              # This can many since there is no kostenplaats in the absence data
              relationship = "many-to-one")

save_combined(employees_contract_enriched)

```

```{r}

enrollments_combined_enriched <- enrollments_combined |>
    calculate_exam_plan_to_start() |>
    calculate_application_to_start() |>
    calculate_bpv_status_to_start() |>
    calculate_bpv_status_to_specific_dates()

save_combined(enrollments_combined_enriched)

```

### 3. Aggregeren naar team

```{r}

# glimpse(enrollments_combined_enriched)
teams_enrollments <- enrollments_combined_enriched %>%
    filter(month(VERBINTENIS_begindatum) == 8,
           VERBINTENIS_intensiteit == "Voltijd",
           COHORT_startjaar >= 2019,
           COHORT_startjaar <= 2023) %>%
    mutate(
        VERBINTENIS_is_passend_onderwijs_gevuld = if_else(is.na(VERBINTENIS_passend_onderwijs_kenmerk), 
                                                           FALSE, 
                                                           TRUE),
        # Als een boolean niet TRUE is, dan is deze FALSE
        across(contains("_is_"), ~if_else(is.na(.), FALSE, .), .names = "{.col}_opgevuld")
    ) %>%
    group_by(TEAM_naam, TEAM_kostenplaats, TEAM_naam_afk, TEAM_school, TEAM_school_afk, COHORT_naam, COHORT_startjaar) %>%
    summarise(
        TEAM_studenten_aantal = n(),
        across(contains("dagen"), ~mean(., na.rm = TRUE)),
        #across(contains("_opgevuld"), ~mean(., na.rm = TRUE)),
        across(contains("waarneming"), ~mean(., na.rm = TRUE)),
        across(contains("_is_"), ~mean(., na.rm = TRUE)),
        BPV_omvang = mean(BPV_omvang, na.rm = TRUE),
        #VERBINTENIS_aanmelding_dagen_in_proces = mean(VERBINTENIS_aanmelding_dagen_in_proces, na.rm = TRUE),
        #VERBINTENIS_is_flex_gevuld = sum(VERBINTENIS_is_flex, na.rm = TRUE),
        #VERBINTENIS_aanmelding_begin_dagen_tot_start = mean(VERBINTENIS_aanmelding_begin_dagen_tot_start, na.rm = TRUE),  
        .groups = "drop"
    ) |>
    # Deze variabele bevat enkel TRUE, de opgevuld variant zet NA op FALSE en levert daardoor wel meerdere waardes
    select(-VERBINTENIS_aanmelding_is_eerste_jaar)
        
save_combined(teams_enrollments)

```

```{r}

teams_employees <- employees_contract_enriched |>
    mutate(
        # TODO moet eerder bij aanmaken verzuim en samenvoegen contracten
        across(contains("verzuim"), ~if_else(is.na(.), 0, .)),
        MEDEWERKER_contract_fte_totaal = MEDEWERKER_contract_fte + MEDEWERKER_contract_fte_aanpassing
    ) |>
    filter(MEDEWERKER_contract_kostenplaats_code %in% teams_enrollments$TEAM_kostenplaats) |>
    group_by(MEDEWERKER_contract_kostenplaats_code, SCHOOLJAAR_naam) |>
    summarise(
        MEDEWERKER_contract_fte = sum(MEDEWERKER_contract_fte, na.rm = TRUE),
        MEDEWERKER_contract_fte_aanpassing = sum(MEDEWERKER_contract_fte_aanpassing, na.rm = TRUE),
        MEDEWERKER_contract_fte_totaal = sum(MEDEWERKER_contract_fte_totaal, na.rm = TRUE),
        across(contains("verzuim"), ~mean(., na.rm = TRUE)),
        .groups = "drop"
    )

save_combined(teams_employees)

```

```{r}



teams_combined <- teams_enrollments |>
    left_join(teams_employees,
              by = c("TEAM_kostenplaats" = "MEDEWERKER_contract_kostenplaats_code", "COHORT_naam" = "SCHOOLJAAR_naam"),
              relationship = "one-to-one") |>
    left_join(teams_results_retention_start_prepared,
              by = c("TEAM_naam", "COHORT_naam" = "SCHOOLJAAR_naam"),
              relationship = "one-to-one")

save_combined(teams_combined)

```

### 4. Analyseren

```{r}
teams_correlation <- teams_combined %>%
    select(where(is.numeric)) %>%
    correlate() %>%
    rearrange() %>%
    mutate(term = term %>% 
           str_remove("VERBINTENIS_") %>%
           str_remove("TEAM_") %>%
           str_replace_all("_", " "))

names(teams_correlation) <- names(teams_correlation) %>% 
    str_remove("VERBINTENIS_") %>%
    str_remove("TEAM_") %>%
    str_replace_all("_", " ")
```

```{r}
teams_correlation %>% 
    select(term, matches("aanmelding|startersresultaat")) %>%
    filter(str_detect(term, "aanmelding|startersresultaat")) %>%
    rplot(print_cor = TRUE) + #, colours = c("red3", "white", "royalblue3")) + 
  theme(
    # Rotate x-axis labels for better readability
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
    # Adjust margin to prevent label cutoff
    plot.margin = unit(c(1, 1, 4, 1), "lines")
  )
```

```{r}
teams_correlation %>% 
    select(term, matches("BPV|startersresultaat")) %>%
    filter(str_detect(term, "BPV|startersresultaat")) %>%
    rplot(print_cor = TRUE) + #, colours = c("red3", "white", "royalblue3")) + 
  theme(
    # Rotate x-axis labels for better readability
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
    # Adjust margin to prevent label cutoff
    plot.margin = unit(c(1, 1, 4, 1), "lines")
  )
```

```{r}
teams_correlation %>% 
    select(term, contains("startersresultaat"), matches("waarneming")) %>%
    arrange(term != `startersresultaat 1 jaars`) %>%
    filter(str_detect(term, "waarneming|startersresultaat")) %>%
    mutate(term = factor(term, levels = term)) %>%
    rplot(print_cor = TRUE) + #, colours = c("red3", "white", "royalblue3")) + 
  theme(
    # Rotate x-axis labels for better readability
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
    # Adjust margin to prevent label cutoff
    plot.margin = unit(c(1, 1, 4, 1), "lines")
  )
```

```{r}

teams_correlation_select <- teams_combined %>%
  select(where(is.numeric)) %>%
  correlate() %>%
  select(term, TEAM_startersresultaat_1_jaars) %>%
  filter(term != "TEAM_startersresultaat_1_jaars") %>%
  filter(TEAM_startersresultaat_1_jaars <= -0.2 | TEAM_startersresultaat_1_jaars >= 0.2) %>%
  # Arrange by correlation value from highest to lowest
  arrange(TEAM_startersresultaat_1_jaars) %>%
    filter(term != "MEDEWERKER_verzuim_kort", 
           term != "VERBINTENIS_is_passend_onderwijs_gevuld_opgevuld") %>%
  mutate(
    term = str_replace_all(term, "_", " "),  # Replace underscores with spaces
    term = str_remove(term, " opgevuld"),    # Remove "opgevuld"
    term = factor(term, levels = term)       # Keep the ordering
  )


ggplot(teams_correlation_select, 
       aes(y = term)) +
  geom_segment(aes(
    x = 0,
    xend = TEAM_startersresultaat_1_jaars,
    yend = term,
    color = TEAM_startersresultaat_1_jaars
  ), 
  size = 2) +
  # Fixed position for numbers on the right
  geom_text(aes(
    x = 0.5,  # Fixed x position for all numbers
    label = sprintf("%.2f", TEAM_startersresultaat_1_jaars)
  ), 
  hjust = 0,  # Align text to the left at the fixed position
  size = 3,
  color = "black") +
  scale_color_gradient2(
    low = "indianred2",
    mid = "white",
    high = "skyblue1",
    limits = c(-0.5, 0.5),
    midpoint = 0
  ) +
  scale_x_continuous(limits = c(-0.6, 0.6)) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 8),
    axis.text.x = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    legend.position = "none"
  ) +
    ggtitle("Hoge correlatie met Startersresultaat 1 jaar")

```

#### 2.1 HR en Onderwijs koppelen

```{r}

test_enrollments_teams <- enrollments_combined %>%
    group_by(TEAM_kostenplaats,
             TEAM_naam,
           TEAM_sk_kostenplaats_hr2day,
           TEAM_sk_kostenplaats) %>%
    count()

test_employees_contract_enriched <- employees_contract_enriched %>%
    group_by(MEDEWERKER_contract_kostenplaats_code) %>%
    count()

test_overig <- anti_join(test_employees_contract_enriched, test_enrollments_teams, by = c("MEDEWERKER_contract_kostenplaats_code" = "TEAM_kostenplaats"))

test_overig_omgekeerd <- anti_join(test_enrollments_teams, test_employees_contract_enriched, by = c("TEAM_kostenplaats" = "MEDEWERKER_contract_kostenplaats_code"))

test_enrollments <- enrollments_combined %>%
    filter(is.na(TEAM_kostenplaats))




```

### X. Test

```{r}

# Ga ik per cohort of niet?
# Zou aanmelding per verbintenis of verbintenisblad moeten zijn?
# sum(is.na(data$AANMELDING_begin_datum))
# [1] 18362
# ## Is flex per verbintenis of per cohort?
# > sum(is.na(data$VERBINTENIS_is_flex))
# [1] 121
# > sum(is.na(data$VERBINTENIS_niveau))
# [1] 12


# enrollments_nieuw_zonder_aanmeldingsdatum <- enrollments_combined |>
#     filter(is.na(VERBINTENIS_aanmelding_begin_datum)) |>
#     count(VERBINTENIS_volgnummer, VERBINTENIS_bladnummer)
# ~300

# waarnemingen, waarop koppelen? # Kan verbintenis worden toegevoegd?
# groepsdeelname, waarop koppelen? # Kan verbintenis worden toegevoegd?

# medewerker fte's, heeft geen functie ID en geen arb ID, waarop kan ik dit het beste koppelen aan verzuim medewerkers? 
## lijkt ook recente jaren data te ontbreken, misschien door gemaakte koppelingen?


# als we het per jaar doen, dan is medewerker-jaar-kostenplaats misschien genoeg? of hebben medewerkers meerdere functies?
# medewerkers ftes
# employees_contract |> tabyl(CONTRACT_afwijking_kostenplaats) %>% arrange(desc(n))


# test <- enrollments_combined |>
#     filter(!is.na(VERBINTENIS_ibp_datum) |
#                !is.na(VERBINTENIS_passend_onderwijs_kenmerk)) |>
#     select(VERBINTENIS_ID,
#            VERBINTENIS_ibp_datum,
#            VERBINTENIS_passend_onderwijs_kenmerk) |>
#     mutate(
#         both_na = is.na(VERBINTENIS_ibp_datum) &
#             is.na(VERBINTENIS_passend_onderwijs_kenmerk),
#         both_fill = (
#             !is.na(VERBINTENIS_ibp_datum) &
#                 !is.na(VERBINTENIS_passend_onderwijs_kenmerk)
#         )
#     )



```
