---
title: "Data validatie"
---

Hier runnen we code om bepalen of de data eruit ziet zoals we verwachten dat deze eruit ziet.

## CREBO koppelen JOB

```{r}

crebo_test <- ingest_crebo_to_organisation_mapping() |>
    #filter(OPLEIDING_crebo == OPLEIDING_crebo_correctie) |>
    get_dupes(OPLEIDING_crebo_correctie) |> 
    select(-dupe_count, - OPLEIDING_cluster, -OPLEIDING_school)

# A tibble: 8 × 4                                                                                                                                              
#   OPLEIDING_crebo OPLEIDING_crebo_correctie OPLEIDING_cluster_nr OPLEIDING_team                     
#             <dbl>                     <dbl>                <dbl> <chr>                              
# 1           25160                     25160                 3000 Beveiliging/Toezicht en Veiligheid 
# 2           25160                     25160                 3000 Hotelschool Amersfoort             
# 3           25779                     25779                 7000 Gezondheidszorg                    
# 4           25779                     25779                 7000 Welzijn                            
# 5           25780                     25780                 7000 Gezondheidszorg                    
# 6           25780                     25780                 7000 Welzijn                            
# 7           79110                     79110                 5000 Juridisch                          
# 8           79110                     79110                 5000 School voor Schoonheidsspecialisten

```

```{r}

students_satisfaction <- bind_rows(
    ingest_students_satisfaction_2019(),
    ingest_students_satisfaction_2021(),
    ingest_students_satisfaction_2023()
) 

students_satisfaction |> filter(CREBO %in% crebo_test$OPLEIDING_crebo) |> count(CREBO, label01, label02) 

# > students_satisfaction |> filter(CREBO %in% crebo_test$OPLEIDING_crebo) |> count(CREBO, label01, label02) 
# # A tibble: 6 × 4
#   CREBO label01                           label02                                n
#   <int> <chr>                             <chr>                              <int>
# 1 25160 School voor Veiligheid            Beveiliging/Toezicht en Veiligheid    10
# 2 25160 School voor Veiligheid            Veiligheid niveau 4                   10
# 3 25160 Sportacademie Amersfoort (school) Hotelschool Amersfoort                 7
# 4 25779 School voor Gezondheidszorg       MZ                                   103
# 5 25779 School voor Welzijn               MZ                                     3
# 6 25780 School voor Gezondheidszorg       MZ                                    20

```

## Controle studenttevredenheid

```{r student satisfaction and teams}

students_satisfaction_enriched_file_path <- file.path(config::get("data_combined_dir"),
                                                      "students_satisfaction_enriched.rds")

students_satisfaction_enriched <- readRDS(students_satisfaction_enriched_file_path)

teams_combined_file_path <- file.path(config::get("data_combined_dir"),
                                                "teams_combined.rds")

teams_combined <- readRDS(teams_combined_file_path)

test_welzijn <- students_satisfaction_enriched |>
    filter(CREBO == 23065) |>
    count(label02, label01, OPLEIDING_team, OPLEIDING_school)

test <- unique(students_satisfaction_enriched$OPLEIDING_team)
test2 <- unique(teams_combined$TEAM_naam)

# intersect(test, test2)

print("Opleidingen wel studenttevredenheid, niet in teams_combined:")
setdiff(test, test2)

```

## Controle verbintenissen

```{r filtering enrollments}
enrollments_combined_enriched_file_path <- file.path(config::get("data_combined_dir"),
                                         "enrollments_combined_enriched.rds")

enrollments_combined_enriched <- readRDS(enrollments_combined_enriched_file_path)

# Visualise histogram with groups on COHORT_startjaar and then VERBINTENIS_begindatum. Put the COHORT_startdaum as line in between

enrollments_combined_enriched_filtered <- enrollments_combined_enriched |>
    filter(COHORT_startjaar >= config::get("first_year") - 1, # Later on we want to calculate growth per year
           COHORT_startjaar <= config::get("last_year"),
           #month(VERBINTENIS_begindatum) == 8,
           VERBINTENIS_actief_op_1_okt_peildatum == TRUE,
           VERBINTENIS_bekostigd == "Ja",
           VERBINTENIS_intensiteit == "Voltijd",
           VERBINTENIS_niveau %in% c("2", "3", "4")) |>
    select(-VERBINTENIS_intensiteit)


ggplot(enrollments_combined_enriched_filtered, aes(x = VERBINTENIS_begindatum, fill = COHORT_startjaar)) +
    geom_histogram(binwidth = 120) +
    #geom_vline(aes(xintercept = COHORT_start_datum), color = "red") +
    facet_wrap(~COHORT_startjaar, scales = "free")

enrollments_combined_enriched_filtered_2 <- enrollments_combined_enriched_filtered |>
    filter(COHORT_start_datum + months(2) >= VERBINTENIS_begindatum,
           COHORT_start_datum - months(10) < VERBINTENIS_begindatum)

ggplot(enrollments_combined_enriched_filtered_2, aes(x = VERBINTENIS_begindatum, fill = COHORT_startjaar)) +
    geom_histogram(binwidth = 30) +
    #geom_vline(aes(xintercept = COHORT_start_datum), color = "red") +
    facet_wrap(~COHORT_startjaar, scales = "free")

```

## Niet meerdere deelnemers per cohort jaar

```{r}

enrollments_combined_enriched_filtered_file_path <- 
    file.path(config::get("data_combined_dir"),                                                                        "enrollments_combined_enriched_filtered.rds")

enrollments_combined_enriched_filtered <- readRDS(enrollments_combined_enriched_filtered_file_path)

enrollments_dupes <- enrollments_combined_enriched_filtered |>
    get_dupes(DEELNEMER_ID, COHORT_startjaar)

```

```{r}

teams_combined_enriched_file_path <- file.path(config::get("data_combined_dir"),
                                               "teams_combined_enriched.rds")

teams_combined_enriched <- readRDS(teams_combined_enriched_file_path)

test3 <- teams_combined_enriched |> 
    filter(COHORT_startjaar > 2019) |>
    select(COHORT_startjaar,
           TEAM_naam,
           TEAM_aantal_eerstejaars,
           TEAM_studenten_aantal) |> 
    filter(!is.na(TEAM_aantal_eerstejaars))

sum(test3$TEAM_aantal_eerstejaars)
sum(test3$TEAM_studenten_aantal)

test4 <- test3 |>
    filter(TEAM_aantal_eerstejaars < TEAM_studenten_aantal)


```

## BPV

```{r}

enrollments_combined_enriched_filtered <- readRDS(file.path(config::get("data_combined_dir"),
                                                   "enrollments_combined_enriched_filtered.rds"))

test6 <- enrollments_combined_enriched_filtered |>
    group_by(OPLEIDING_leerweg) |>
    summarise(BPV_pct = sum(is.na(BPV_ID)) / n())

```

```{r}

teams_file_path <- file.path(config::get("data_combined_dir"), "teams_combined_enriched.rds")

teams <- readRDS(teams_file_path)

test_bpv <- teams |> select(
    COHORT_naam,
    TEAM_naam,
    TEAM_school,
    BPV_is_definitief_voor_1_okt,
    BPV_is_definitief_voor_1_okt_opgevuld,
    BPV_is_definitief_voor_1_okt_BOL,
        OPLEIDING_leerweg_BOL,
    OPLEIDING_leerweg_BBL
) |>
    mutate(verhouding1 = BPV_is_definitief_voor_1_okt_BOL / BPV_is_definitief_voor_1_okt,
           verhouding2 = BPV_is_definitief_voor_1_okt_opgevuld / BPV_is_definitief_voor_1_okt,
           verhouding3 = BPV_is_definitief_voor_1_okt_BOL / BPV_is_definitief_voor_1_okt_opgevuld)

test_bpv_nieuw <- teams_enrollments |> select(
    COHORT_naam,
    TEAM_naam,
    TEAM_school,
    BPV_is_definitief_voor_1_okt,
    BPV_is_definitief_voor_1_okt_opgevuld,
    BPV_is_definitief_voor_1_okt_BOL,
    BPV_is_definitief_voor_1_okt_BOL_opgevuld,
    OPLEIDING_leerweg_BOL,
    OPLEIDING_leerweg_BBL
) |>
    mutate(bol_reg = BPV_is_definitief_voor_1_okt_BOL / BPV_is_definitief_voor_1_okt,
           opgevuld_reg = BPV_is_definitief_voor_1_okt_opgevuld / BPV_is_definitief_voor_1_okt,
           bol_opgevuld = BPV_is_definitief_voor_1_okt_BOL / BPV_is_definitief_voor_1_okt_opgevuld
)


```

Dit werkt nu, verschillende waardes voor BPV_is_definitief_voor_1_okt_BOL en BPV_is_definitief_voor_1_okt

```{r}

teams_correlation_file_path <- file.path(config::get("data_analysed_dir"),
                                         "teams_correlation.rds")

teams_correlation <- readRDS(teams_correlation_file_path)

test <- teams_correlation |> 
    select(term, matches("BPV|startersresultaat")) |>
    filter(str_detect(term, "BPV|startersresultaat")) |>
    rplot(print_cor = TRUE) + #, colours = c("red3", "white", "royalblue3")) + 
  theme(
    # Rotate x-axis labels for better readability
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
    # Adjust margin to prevent label cutoff
    plot.margin = unit(c(1, 1, 4, 1), "lines")
  )

test

```

## JOB Light

Weinig overeenkomsten

```{r}

codebook_students_satisfaction_2020 <- ingest_codebook_students_satisfaction_2020()
codebook_students_satisfaction_2022 <- ingest_codebook_students_satisfaction_2022()

test <- inner_join(
    codebook_students_satisfaction_2020,
    codebook_students_satisfaction_2022,
    by = c("volledige_vraag" = "volledige_vraag")
)

```

```{r}
codebook_students_satisfaction_2022 <- ingest_codebook_students_satisfaction_2022()

codebook_students_satisfaction_2023 <- ingest_codebook_students_satisfaction_2023()

test2 <- inner_join(
    codebook_students_satisfaction_2022,
    codebook_students_satisfaction_2023,
    by = c("volledige_vraag" = "volledige_vraag")
)


```

## Job onderlinge correlatie

```{r}

students_satisfaction_file_path <- file.path(config::get("data_prepared_dir"),
                                             "students_satisfaction.rds")

students_satisfaction <- readRDS(students_satisfaction_file_path)

#students_satisfaction_correlation <- 
#Based on the correlation plots request and the data context, here's how to split the 86 variables into multiple correlation plots:

#```{r}
# Split variables into themes
satisfaction_themes <- list(
    school = students_satisfaction |> select(matches("school|instelling|opleiding")),
    facilities = students_satisfaction |> select(matches("faciliteit|gebouw|werkplek|materiaal")),
    education = students_satisfaction |> select(matches("les|docent|begeleiding|onderwijs")),
    assessment = students_satisfaction |> select(matches("toets|examen|beoordeling")),
    internship = students_satisfaction |> select(matches("stage|praktijk|bpv")),
    general = students_satisfaction |> select(matches("algemeen|sfeer|veilig"))
)

# Create correlation plots for each theme
correlation_plots <- lapply(names(satisfaction_themes), function(theme) {
    satisfaction_themes[[theme]] |>
        correlate_teams() |>
        shave() |>
        rplot(print_cor = TRUE) +
        ggtitle(paste("Correlations:", theme)) +
        theme(axis.text.x = element_text(angle = 45, hjust = 1))
})

# Print plots
correlation_plots

```

Based on the context and data structure shown, I'll help modify the correlation plots to filter on values with high correlation. Here's the modified code:

```{r}
# First define a correlation threshold
cor_threshold <- 0.5

# Function to filter correlations and create plot for each theme
create_filtered_correlation_plot <- function(data, title, cor_threshold) {
    correlations <- data |>
        correlate() |>
        shave() |>
        as_tibble(rownames = "var1") |>
        pivot_longer(-var1, names_to = "var2", values_to = "correlation") |>
        filter(abs(correlation) >= cor_threshold, 
               var1 < var2) |>  # Keep only one triangle of the correlation matrix
        arrange(desc(abs(correlation)))
    
    if(nrow(correlations) == 0) return(NULL)
    
    ggplot(correlations, aes(x = var1, y = var2, fill = correlation)) +
        geom_tile() +
        geom_text(aes(label = sprintf("%.2f", correlation)), size = 3) +
        scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                             midpoint = 0, limits = c(-1,1)) +
        theme_minimal() +
        theme(axis.text.x = element_text(angle = 45, hjust = 1),
              axis.title = element_blank()) +
        ggtitle(paste("Strong correlations (|r| >=", cor_threshold, "):", title))
}

# Create and filter correlation plots
filtered_plots <- lapply(names(satisfaction_themes), function(theme) {
    create_filtered_correlation_plot(satisfaction_themes[[theme]], theme, cor_threshold)
})

# Remove NULL plots
filtered_plots <- filtered_plots[!sapply(filtered_plots, is.null)]

# Print plots
filtered_plots

```

## Job testen

```{r}
students_satisfaction_file_path <- file.path(config::get("data_prepared_dir"),
                                             "students_satisfaction.rds")

students_satisfaction <- readRDS(students_satisfaction_file_path)

JOB_variabelen <- teams_correlation_result |>
    filter(str_detect(term, "JOB")) |>
    pull(term) |> 
    str_replace_all(" ", "_")

test <- students_satisfaction |> 
    select(JOB_variabelen) |>
    correlate() |>
    rearrange() |>
    #shave() |>
    rplot(print_cor = TRUE)


```

```{r}

job_teams_2021 <- teams_selected |>
    filter(COHORT_naam == "2021/2022") |>
    select(where(is.numeric)) |>
    select(contains("JOB"), TEAM_startersresultaat_1_jaars) |>
    correlate() |>
    select(term, TEAM_startersresultaat_1_jaars) |>
  filter(term != "TEAM_startersresultaat_1_jaars") |>
  #filter(TEAM_startersresultaat_1_jaars <= -0.26 | TEAM_startersresultaat_1_jaars >= 0.30) |>
  # Arrange by correlation value from highest to lowest
  arrange(desc(TEAM_startersresultaat_1_jaars)) |>
  mutate(
    #term = str_replace_all(term, "_", " "),  # Replace underscores with spaces
    term = factor(term, levels = term),    # Keep the ordering
    order = row_number()
    )

job_teams_2023 <- teams_selected |>
    filter(COHORT_naam == "2023/2024") |>
    select(where(is.numeric)) |>
    select(contains("JOB"), TEAM_startersresultaat_1_jaars) |>
    correlate() |>
    select(term, TEAM_startersresultaat_1_jaars) |>
  filter(term != "TEAM_startersresultaat_1_jaars") |>
  #filter(TEAM_startersresultaat_1_jaars <= -0.26 | TEAM_startersresultaat_1_jaars >= 0.30) |>
  # Arrange by correlation value from highest to lowest
  arrange(desc(TEAM_startersresultaat_1_jaars)) |>
  mutate(
    #term = str_replace_all(term, "_", " "),  # Replace underscores with spaces
    term = factor(term, levels = term),    # Keep the ordering
    order = row_number()
  ) 



```

```{r}
#| label: job_correlation_over_years_filter

JOB_2_jaar <- full_join(job_teams_2021, job_teams_2023, by = "term", suffix = c("_2021", "_2023")) |>
    mutate(verschil = (TEAM_startersresultaat_1_jaars_2023 - TEAM_startersresultaat_1_jaars_2021),
           verschil_order = order_2021 - order_2023,
           totaal_order = order_2021 + order_2023,
           mean = rowMeans(across(contains("TEAM_startersresultaat_1_jaars"))))

JOB_2_jaar_gefilterd <- JOB_2_jaar |>
    filter(totaal_order <= 30,
           TEAM_startersresultaat_1_jaars_2021 > 0.10,
           TEAM_startersresultaat_1_jaars_2023 > 0.10)

JOB_2_jaar_gefilterd |> pull(term)


```

## Examenplan

Dit lijkt te kloppen

```{r}
enrollments_combined_enriched_filtered_file_path <- file.path(
    config::get("data_combined_dir"),
    "enrollments_combined_enriched_filtered.rds")

enrollments_combined_enriched_filtered <- readRDS(enrollments_combined_enriched_filtered_file_path)

vars_exam_plan <- names(enrollments_combined_enriched_filtered) |> 
    str_subset("exam")

enrollments_exam_plan <- enrollments_combined_enriched_filtered |> select(
    COHORT_naam,
    COHORT_startjaar,
    OPLEIDING_naam,
    TEAM_naam,
    all_of(vars_exam_plan)
)

```

```{r}

enrollments_exam_plan_long <- enrollments_exam_plan |>
  pivot_longer(
    cols = contains("exam") & where(is.numeric),
    names_to = "metric",
    values_to = "value"
  ) |>
  # group_by(COHORT_naam, metric) |>
  # summarize(
  #   avg_value = mean(value, na.rm = TRUE),
  #   .groups = "drop"
  # ) |>
  mutate(
    metric = str_remove(metric, "OPLEIDING_examen_plan_") |>
      str_remove("_dagen_tot_start")
  )


enrollments_exam_plan_long |>
  filter(!is.na(value)) |>
  ggplot(aes(x = COHORT_naam, y = value, color = metric)) +
  geom_boxplot(alpha = 0.7, outlier.shape = NA) +
  facet_wrap(~metric, scales = "free_y") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none"
  ) +
  labs(
    title = "Exam Plan")

enrollments_exam_plan_long |>
  filter(!is.na(value)) |>
  ggplot(aes(x = COHORT_naam, y = value, fill = metric)) +
  geom_boxplot(alpha = 0.8, outlier.alpha = 0.4, outlier.size = 1) +
  facet_wrap(~metric, scales = "free_y", ncol = 2) +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none",
    panel.grid.minor = element_blank(),
    strip.text = element_text(face = "bold"),
    plot.title = element_text(face = "bold")
  ) +
  labs(
    title = "Distribution of Exam Plan Metrics by Cohort",
    x = "Cohort",
    y = "Days"
  )

```

```{r}

exam_plot <- enrollments_exam_plan_long |>
  ggplot(aes(x = COHORT_naam, y = value, color = metric)) +
  geom_line(aes(group = interaction(metric, OPLEIDING_naam))) +
  geom_point() +
  #scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(
    title = "Exam Plan Metrics by Cohort",
    x = "Cohort",
    y = "Average Value",
    color = "Metric"
  )

exam_plot

```

```{r}

enrollments_exam_plan_long_avg <- enrollments_exam_plan_long #|>
  # group_by(COHORT_naam, metric) |>
  # summarize(
  #   avg_value = mean(value, na.rm = TRUE),
  #   .groups = "drop"
  # )


exam_plot <- enrollments_exam_plan_long_avg |>
  ggplot(aes(x = COHORT_naam, y = avg_value, color = metric)) +
  geom_line(aes(group = metric)) +
  geom_point() +
  #scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(
    title = "Exam Plan Metrics by Cohort",
    x = "Cohort",
    y = "Average Value",
    color = "Metric"
  )

exam_plot

```

```{r}
exam_plot <- enrollments_exam_plan_long |>
  ggplot(aes(x = COHORT_naam, y = value, color = metric)) +
    geom_line(aes(group = metric)) +
  #geom_point() +
  #scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(
    title = "Exam Plan Metrics by Cohort",
    x = "Cohort",
    y = "Average Value",
    color = "Metric"
  )

exam_plot

```

```{r}

teams_combined_enriched_file_path <- file.path(config::get("data_combined_dir"),
                                               "teams_combined_enriched.rds")

teams <- readRDS(teams_combined_enriched_file_path)

vars_exam_plan <- names(teams) |> 
    str_subset("exam")

teams_exam_plan <- teams |> select(
    COHORT_naam,
    TEAM_naam,
    all_of(vars_exam_plan)
)

```

## Teams correlatie per jaar

```{r}

analyze_correlations_by_cohort <- function(data, cohort_year) {
  # Filter data for specific cohort year
  cohort_data <- data |>
    filter(COHORT_startjaar == cohort_year)
  
  # Perform correlation analysis
  correlations <- cohort_data |>
    select(where(is.numeric)) |>
    correlate() |>
    select(term, TEAM_startersresultaat_1_jaars) |>
    filter(term != "TEAM_startersresultaat_1_jaars") |>
    filter(#TEAM_startersresultaat_1_jaars > -0.25 & 
           #TEAM_startersresultaat_1_jaars < 0.25,
           TEAM_startersresultaat_1_jaars < -0.25 | 
           TEAM_startersresultaat_1_jaars > 0.25) |>
    filter(term != "MEDEWERKER_verzuim_kort",
           term != "VERBINTENIS_is_passend_onderwijs_gevuld_opgevuld") |>
    arrange(TEAM_startersresultaat_1_jaars) |>
    mutate(
      term = str_replace_all(term, "_", " "),
      term = factor(term, levels = term)
    )
    
  # Create visualization
  plot <- ggplot(correlations, 
                aes(x = term, 
                    y = TEAM_startersresultaat_1_jaars,
                    fill = TEAM_startersresultaat_1_jaars > 0)) +
    geom_col() +
    coord_flip() +
    scale_fill_manual(values = c("#E15759", "#4E79A7"), guide = "none") +
    labs(
      title = paste("Correlaties met startersresultaat - Cohort", cohort_year),
      x = "",
      y = "Correlatie coëfficiënt"
    ) +
    theme_minimal(base_size = 14) +
    theme(
      plot.title = element_text(size = 16, face = "bold", margin = margin(b = 20)),
      plot.title.position = "plot",
      axis.text.y = element_text(size = 11),
      axis.text.x = element_text(size = 11),
      panel.grid.major.y = element_blank(),
      panel.grid.minor = element_blank(),
      plot.margin = margin(t = 20, r = 20, b = 20, l = 20)
    )
    
  return(plot)
}

# Gebruik de functie voor elk cohortjaar
cohort_years <- unique(teams_selected$COHORT_startjaar)
cohort_years <- c(2020:2023)

# Maak plots voor elk cohortjaar
plots <- map(cohort_years, ~analyze_correlations_by_cohort(teams_selected, .x))

```

```{r}

students_satisfaction_file_path <- file.path(config::get("data_prepared_dir"), "students_satisfaction.rds")
students_satisfaction <- readRDS(students_satisfaction_file_path)
glimpse(students_satisfaction)

test <- students_satisfaction |> count(SCHOOLJAAR_startjaar, leerweg, niveau)
test2 <- students_satisfaction |> count(SCHOOLJAAR_startjaar, leerweg, niveau, label01, label02)
test3 <- students_satisfaction |> count(SCHOOLJAAR_startjaar, niveau)
test4 <- students_satisfaction |> count(SCHOOLJAAR_startjaar)
test5 <- students_satisfaction |> filter(is.na(niveau))

```

## Studenttevredenheid

```{r}

```

```{r}

# students_satisfaction_full <- bind_rows(
#     students_satisfaction,
#     # students_satisfaction_2020 |>
#     #     mutate(across(any_of(codebook_student_satisfaction_mapping$omschrijving, ~parse_number(.)))),
#     students_satisfaction_2022 |>
#         mutate(across(any_of(codebook_student_satisfaction_mapping$omschrijving, ~parse_number(.))))
# )

job <- students_satisfaction |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving),
                             startjaar)

job_full <- bind_rows(students_satisfaction |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving),
                             startjaar),
                  students_satisfaction_2020 |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving)) |>
                      mutate(across(everything(), ~parse_number(.))),
                  students_satisfaction_2022 |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving)) |>
                      mutate(across(everything(), ~parse_number(.)))
                )

job <- students_satisfaction |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving),
                             startjaar = SCHOOLJAAR_startjaar)

job_2020 <- students_satisfaction_2020 |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving)) |>
                      mutate(across(everything(), ~parse_number(.)))

job_2022 <- students_satisfaction_2022 |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving)) |>
                      mutate(across(everything(), ~parse_number(.)))

job_full <- bind_rows(students_satisfaction |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving),
                             startjaar = SCHOOLJAAR_startjaar),
                  students_satisfaction_2020 |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving)) |>
                      mutate(across(everything(), ~parse_number(.))),
                  students_satisfaction_2022 |>
                      select(any_of(codebook_student_satisfaction_mapping$omschrijving)) |>
                      mutate(across(everything(), ~parse_number(.)))
                )

job |>
    correlate() |>
    #rearrange() |>
    shave() |>
    rplot(print_cor = TRUE)
    
job_2022 |>
    correlate() |>
    #rearrange() |>
    shave() |>
    rplot(print_cor = TRUE)

job_2020 |>
    correlate() |>
    #rearrange() |>
    shave() |>
    rplot(print_cor = TRUE)


```

```{r}


students_satisfaction <- bind_rows(
    ingest_students_satisfaction_2019(),
    ingest_students_satisfaction_2021(),
    ingest_students_satisfaction_2023()
) |>
    filter(!is.na(CREBO)) |>
    save_prepared_and_return(filename = "students_satisfaction")

print("Student tevredenheid data succesvol ingeladen en geprepareerd.")

codebook_student_satisfaction_mapping <-  ingest_codebook_students_satisfaction_mapping()
#Based on the context, I'll provide code to transform the students_satisfaction names using the codebook mapping. Here's the code:

rename_mapping_job <- codebook_student_satisfaction_mapping |>
    select(vraag_code_job, omschrijving) |>
    filter(!is.na(omschrijving)) |>
    pull(vraag_code_job, name = omschrijving) |>
    discard(is.na)

students_satisfaction <- students_satisfaction |>
  rename(any_of(rename_mapping_job))


```

```{r}



enrollments_combined_enriched_filtered2 <- enrollments_combined_enriched_filtered |>
    mutate(OPLEIDING_code_cijfers = parse_number(OPLEIDING_code))

students_satisfaction_2022_2 <- students_satisfaction_2022 |>
    mutate(opleiding_code_cijfers = parse_number(opleiding))

test_code_job <- students_satisfaction_2022_2 |>
    tabyl(opleiding_code_cijfers)

test_code_enrollments <- enrollments_combined_enriched_filtered2 |>
    tabyl(OPLEIDING_code_cijfers)

test_inner <- inner_join(test_code_job, test_code_enrollments, by = c("opleiding_code_cijfers" = "OPLEIDING_code_cijfers"))

test_anti <- anti_join(test_code_job, test_code_enrollments, by = c("opleiding_code_cijfers" = "OPLEIDING_code_cijfers"))

test_job_missende_opleidingen <- students_satisfaction_2022_2 |>
    filter(!opleiding_code_cijfers %in% enrollments_combined_enriched_filtered2$OPLEIDING_code_cijfers) |>
    tabyl(opleiding)

test_job_2020 <- students_satisfaction_2020 |> tabyl(school_team)

test_overall_team <- enrollments_combined_enriched_filtered |> tabyl(TEAM_naam)

test_inner_team <- inner_join(test_job_2020, test_overall_team, by = c("school_team" = "TEAM_naam"))

test <- tabyl(students_satisfaction_2022$opleiding)

test_overall <- tabyl(enrollments_combined_enriched_filtered$OPLEIDING_naam)
test_overall_code <- tabyl(enrollments_combined_enriched_filtered$OPLEIDING_code)


```

## MWO

Erg weinig medewerkers per team, vaak minder dan 30 per jaar. Ook maar voor 2 jaar beschikbaar.

```{r}

test_MWO_jaar_cluster <- employees_satisfaction2 |> 
    tabyl(TEAM_cluster, MWO_schooljaar_startjaar)
test_MWO_jaar_team <- employees_satisfaction2 |> 
    filter(!is.na(TEAM_cluster)) |> 
    tabyl(TEAM_kostenplaats_naam, MWO_schooljaar_startjaar)


```

```{r}

MWO_variabelen <- teams_correlation_result |>
    filter(str_detect(term, "MWO")) |>
    pull(term) |> 
    str_replace_all(" ", "_")

test <- employees_satisfaction |> 
    select(MWO_variabelen) |>
    correlate() |>
    rearrange() |>
    #shave() |>
    rplot(print_cor = TRUE)

test

```

```{r}

teams_2020 <- teams_selected |>
    filter(COHORT_naam == "2020/2021") |>
    select(where(is.numeric)) |>
    select(contains("MWO"), TEAM_startersresultaat_1_jaars) |>
    correlate() |>
    select(term, TEAM_startersresultaat_1_jaars) |>
  filter(term != "TEAM_startersresultaat_1_jaars") |>
  #filter(TEAM_startersresultaat_1_jaars <= -0.26 | TEAM_startersresultaat_1_jaars >= 0.30) |>
  # Arrange by correlation value from highest to lowest
  arrange(TEAM_startersresultaat_1_jaars) |>
  mutate(
    term = str_replace_all(term, "_", " "),  # Replace underscores with spaces
    term = factor(term, levels = term)       # Keep the ordering
  )    


```

```{r}
teams_2022 <- teams_selected |>
    filter(COHORT_naam == "2022/2023") |>
    select(where(is.numeric)) |>
    select(contains("MWO"), TEAM_startersresultaat_1_jaars) |>
    correlate() |>
    select(term, TEAM_startersresultaat_1_jaars) |>
  filter(term != "TEAM_startersresultaat_1_jaars") |>
  #filter(TEAM_startersresultaat_1_jaars <= -0.26 | TEAM_startersresultaat_1_jaars >= 0.30) |>
  # Arrange by correlation value from highest to lowest
  arrange(TEAM_startersresultaat_1_jaars) |>
    filter(term != "MEDEWERKER_verzuim_kort_opgevuld", 
           term != "VERBINTENIS_is_passend_onderwijs_gevuld_opgevuld") |>
  mutate(
    term = str_replace_all(term, "_", " "),  # Replace underscores with spaces
    term = factor(term, levels = term)       # Keep the ordering
  )    


```

```{r}
#| label: MWO_correlation_over_years_filter

MWO_2_jaar <- full_join(teams_2020, teams_2022, by = "term", suffix = c("_2020", "_2022")) |>
    mutate(verschil = (TEAM_startersresultaat_1_jaars_2022 - TEAM_startersresultaat_1_jaars_2020),
           mean = rowMeans(across(contains("TEAM_startersresultaat_1_jaars"))))

MWO_2_jaar_gefilterd <- MWO_2_jaar |>
    filter(abs(verschil) < abs(mean),
           abs(verschil) < abs(TEAM_startersresultaat_1_jaars_2022),
           abs(verschil) < abs(TEAM_startersresultaat_1_jaars_2020),
           abs(mean) > 0.30) |>
    arrange(desc(abs(mean)))


```

```{r}

test <- intersect(names(employees_satisfaction_2020), names(employees_satisfaction_2022)) |> as_tibble_col()
test_2020 <- setdiff(names(employees_satisfaction_2020), names(employees_satisfaction_2022)) |> as_tibble_col()
test_2022 <- setdiff(names(employees_satisfaction_2022), names(employees_satisfaction_2020)) |> as_tibble_col()
```

## Kort verzuim

```{r}

teams_selected_file_path <- file.path(config::get("data_analysed_dir"), "teams_selected.rds")

teams_selected <- readRDS(teams_selected_file_path)

```

```{r}

teams_correlation_employee_absence_other <- correlate_teams_and_filter(teams_selected, "MEDEWERKER_verzuim_pct_kort", !matches("JOB|MWO"), filter_type = "outside")

```

```{r}
plot_teams_correlations(teams_correlation_employee_absence_other, "MEDEWERKER_verzuim_pct_kort", "Hoge correlatie met Kort verzuim")


```

We zien dat d

```{r}
teams_correlation_employee_absence_MWO <- correlate_teams_and_filter(teams_selected, "MEDEWERKER_verzuim_pct_kort", matches("MWO"), filter_type = "outside")


```

```{r}

plot_teams_correlations(teams_correlation_employee_absence_MWO, "MEDEWERKER_verzuim_pct_kort", "Hoge correlatie met Kort verzuim")

```

```{r}
teams_correlation_employee_absence_MWO_2022 <- correlate_teams_and_filter(teams_selected |> filter(COHORT_startjaar == 2022), "MEDEWERKER_verzuim_pct_kort", matches("MWO"), filter_type = "outside")

```

```{r}

plot_teams_correlations(teams_correlation_employee_absence_MWO_2022, "MEDEWERKER_verzuim_pct_kort", "Hoge correlatie met Kort verzuim")

```

```{r}
teams_correlation_employee_absence_MWO_2020 <- correlate_teams_and_filter(teams_selected |> filter(COHORT_startjaar == 2020), "MEDEWERKER_verzuim_pct_kort", matches("MWO"), filter_type = "outside")

```

```{r}

plot_teams_correlations(teams_correlation_employee_absence_MWO_2020, "MEDEWERKER_verzuim_pct_kort", "Hoge correlatie met Kort verzuim")

```

## Vooropleiding


```{r}

student_prior_education_yearly <- ingest_students_prior_education()

test4 <- student_prior_education_yearly |>
    mutate(
        DEELNEMER_vooropleiding_einddatum = as.Date(DEELNEMER_vooropleiding_einddatum, format = "%d-%m-%Y")
    ) |>
    filter(DEELNEMER_vooropleiding_hoogst_gediplomeerde == 1 |
               DEELNEMER_vooropleiding_hoogst_genoten == 1 & DEELNEMER_vooropleiding_einddatum < as.Date("2025-01-01"))


test5 <- student_prior_education_yearly %>%
    mutate(
        DEELNEMER_vooropleiding_einddatum = as.Date(DEELNEMER_vooropleiding_einddatum, format = "%d-%m-%Y")
    ) %>%
    filter(DEELNEMER_vooropleiding_einddatum < as.Date("2015-01-01")) %>%
    count(DEELNEMER_vooropleiding_vooropleiding,
          #DEELNEMER_vooropleiding_soort_naam,
          DEELNEMER_vooropleiding_vooropleidings_categorie,
          #DEELNEMER_vooropleiding_hoogst_gediplomeerde,
          DEELNEMER_vooropleiding_diploma_behaald) %>%
    #filter(str_detect(DEELNEMER_vooropleiding_vooropleidings_categorie, "MBO")) %>%
    mutate(DEELNEMER_passend_niveau = case_when(
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO_BB" ~ 2,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO_KB" ~ 3,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO_GL" ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO_TL" ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBOTL" ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "HAVO" ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "MBO-1" ~ 2,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "MBO-2" ~ 3,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "MBO-3" ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "MBO-4" ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie %in% c("Basisonderwijs", "Basisvorming") &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "[Hh]avo|HAVO|[Vv]wo|VWO") ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie %in% c("Basisonderwijs", "Basisvorming") &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "MBO Niveau 2|Niet te achterhalen|Nog onbekend") ~ 2,
        DEELNEMER_vooropleiding_vooropleidings_categorie %in% c("Basisonderwijs", "Basisvorming") ~ 1,
        is.na(DEELNEMER_vooropleiding_vooropleidings_categorie) ~ 2,
        DEELNEMER_vooropleiding_vooropleidings_categorie %in% c("Geen", "VSO", "VO") ~ 1,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO" &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "[Kk]ader") ~ 3,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO" &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "[Gg]emengd") ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO" &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "[Tt]heo") ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO" &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "[Bb]asis") ~ 2,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO" &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "4") ~ 4,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "VMBO" ~ 3,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "MBO12" &
            str_detect(DEELNEMER_vooropleiding_vooropleiding, "1") ~ 2,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "MBO12" ~ 3,
        DEELNEMER_vooropleiding_vooropleidings_categorie == "MBO34" ~ 4,
        .default = 4
    ))



```

Weinig verschil na nieuwe update, zoals Erik Bood al voorspelde.

```{r}

students_prior_education_old_file_path <- file.path(config::get("data_test_dir"), "students_prior_education_old.rds")

students_prior_education_old <- readRDS(students_prior_education_old_file_path)

student_years_prior_education_old_file_path <- file.path(config::get("data_test_dir"), "student_years_prior_education_old.rds")

student_years_prior_education_old <- readRDS(student_years_prior_education_old_file_path)

student_years_prior_education_expanded_old_file_path <- file.path(config::get("data_test_dir"), "student_years_prior_education_expanded_old.rds")

student_years_prior_education_expanded_old <- readRDS(student_years_prior_education_expanded_old_file_path)


```

```{r}

students_prior_education <- ingest_students_prior_education()

student_years_prior_education_expanded <- students_prior_education |>
    transform_prior_education_to_student_year() 

student_years_prior_education <- student_years_prior_education_expanded |>
    transform_prior_education_vo_and_highest_degree()



```

```{r}

anti_final <- student_years_prior_education |>
    anti_join(student_years_prior_education_old)

anti_final_old <- student_years_prior_education_old |>
    anti_join(student_years_prior_education)

anti_join_both <- full_join(anti_final, anti_final_old, by = c("DEELNEMER_ID", "COHORT_naam"), suffix = c("_new", "_old"))

anti_join_bind <- bind_rows(anti_final |> mutate(source = "new") |> select(source, everything()), 
                            anti_final_old |> mutate(source = "old") |> select(source, everything())) |>
    arrange(DEELNEMER_ID, COHORT_naam)


```

## Verbintenis begindatum

```{r}

enrollments_basics_file_path <- file.path(config::get("data_prepared_dir"), "enrollments_basics.rds")

enrollments_basics <- readRDS(enrollments_basics_file_path)

test <- enrollments_basics |>
    mutate(VERBINTENIS_begindatum_verschil = VERBINTENIS_begindatum_eerst != VERBINTENIS_begindatum,
           VERBINTENIS_einddatum_verschil = VERBINTENIS_einddatum_laatst != VERBINTENIS_einddatum,
           VERBINTENIS_actief_op_1_okt_peildatum_verschil = VERBINTENIS_actief_op_1_okt_peildatum_laatst != VERBINTENIS_actief_op_1_okt_peildatum)
    
test2 <- test |>
    count(VERBINTENIS_begindatum_verschil,
          VERBINTENIS_einddatum_verschil,
          VERBINTENIS_actief_op_1_okt_peildatum_verschil)

test3 <- test |>
    #filter(COHORT_ID == 40) |>
    select(DEELNEMER_ID, 
           COHORT_ID, 
           VERBINTENIS_begindatum_verschil,
           VERBINTENIS_begindatum,
           VERBINTENIS_begindatum_eerst,
           VERBINTENIS_einddatum,
           VERBINTENIS_einddatum_laatst,
           everything())
    
test5 <- enrollments_basics |>
    group_by(DEELNEMER_ID) |>
    mutate(test = min(VERBINTENIS_volgnummer) != max(VERBINTENIS_volgnummer)) |>
    ungroup() |>
    filter(test == TRUE)

```

Nu doen we het na 02_combined zodat we kunnen groeperen op bc codes

```{r}

enrollments_combined_enriched <- readRDS(file.path(config::get("data_combined_dir"),
                                                   "enrollments_combined_enriched.rds"))


test_combined <- enrollments_combined_enriched |>
    mutate(VERBINTENIS_begindatum_verschil = VERBINTENIS_begindatum_eerst != VERBINTENIS_begindatum,
           VERBINTENIS_einddatum_verschil = VERBINTENIS_einddatum_laatst != VERBINTENIS_einddatum,
           VERBINTENIS_actief_op_1_okt_peildatum_verschil = VERBINTENIS_actief_op_1_okt_peildatum_laatst != VERBINTENIS_actief_op_1_okt_peildatum)
    
test_combined2 <- test_combined |>
    count(VERBINTENIS_begindatum_verschil,
          VERBINTENIS_einddatum_verschil,
          VERBINTENIS_actief_op_1_okt_peildatum_verschil)

test_combined3 <- test_combined |>
    #filter(COHORT_ID == 40) |>
    select(DEELNEMER_ID, 
           OPLEIDING_bc_code,
           OPLEIDING_bc_label,
           COHORT_ID, 
           VERBINTENIS_actief_op_1_okt_peildatum_verschil,
           VERBINTENIS_actief_op_1_okt_peildatum_laatst,
           VERBINTENIS_begindatum_verschil,
           VERBINTENIS_einddatum_verschil,
           VERBINTENIS_actief_op_1_okt_peildatum_verschil,
           VERBINTENIS_begindatum,
           VERBINTENIS_begindatum_eerst,
           VERBINTENIS_einddatum,
           VERBINTENIS_einddatum_laatst,
           everything()) |>
    arrange(DEELNEMER_ID, OPLEIDING_bc_code)
    
test_combined5 <- enrollments_basics |>
    group_by(DEELNEMER_ID) |>
    mutate(test = min(VERBINTENIS_volgnummer) != max(VERBINTENIS_volgnummer)) |>
    ungroup() |>
    filter(test == TRUE)

test_begin_datum <- test_combined |>
    count(COHORT_ID, COHORT_naam, VERBINTENIS_begindatum_eerst)

```

## Filter verbintenissen

```{r}

enrollments_combined_filtered <- enrollments_combined_enriched |>
        filter(COHORT_startjaar >= config::get("first_year") + 1, # Later on we want to calculate growth per year
               COHORT_startjaar <= config::get("last_year"),
               #month(VERBINTENIS_begindatum) == 8,
               COHORT_start_datum + months(2) >= VERBINTENIS_begindatum,
               COHORT_start_datum - months(10) < VERBINTENIS_begindatum,
               VERBINTENIS_actief_op_1_okt_peildatum == TRUE,
               VERBINTENIS_bekostigd == "Ja",
               VERBINTENIS_intensiteit == "Voltijd",
               VERBINTENIS_niveau %in% c("2", "3", "4")) |>
        select(-VERBINTENIS_intensiteit)

enrollments_combined_filtered_2 <- enrollments_combined_enriched |>
        filter(VERBINTENIS_begindatum_eerst >= as.Date("2020-08-01"),
               VERBINTENIS_begindatum_eerst < as.Date("2024-07-01"),
               COHORT_startjaar >= config::get("first_year") + 1, # Later on we want to calculate growth per year
               COHORT_startjaar <= config::get("last_year"),
               #month(VERBINTENIS_begindatum) == 8,
               #COHORT_start_datum + months(2) >= VERBINTENIS_begindatum_eerst,
               #COHORT_start_datum - months(10) < VERBINTENIS_begindatum_eerst,
               VERBINTENIS_actief_op_1_okt_peildatum_laatst == TRUE,
               VERBINTENIS_bekostigd == "Ja",
               VERBINTENIS_intensiteit == "Voltijd",
               VERBINTENIS_niveau %in% c("2", "3", "4")) |>
        select(-VERBINTENIS_intensiteit) |>
    arrange(DEELNEMER_ID, OPLEIDING_bc_code, VERBINTENIS_begindatum) |>
    distinct(DEELNEMER_ID, OPLEIDING_bc_code, .keep_all = TRUE) |>
    mutate(COHORT_startjaar = if_else(month(VERBINTENIS_begindatum_eerst) %in% c(8, 9, 10, 11, 12),
                                year(VERBINTENIS_begindatum_eerst),
                                year(VERBINTENIS_begindatum_eerst) - 1))


```

## Teams

Ik heb aantal verschillen berekent. Ik kom niet dichterbij het aantal studenten in de 'noemer' startersresultaat van Delphi.

```{r}

teams_file_path <- file.path(config::get("data_combined_dir"), "teams_combined_enriched.rds")

teams <- readRDS(teams_file_path)

test_teams <- teams |>
    mutate(TEAM_verschil_aantal = TEAM_studenten_aantal - TEAM_aantal_eerstejaars) |>
    filter(COHORT_naam != "2019/2020") |>
    select(TEAM_naam, COHORT_startjaar, TEAM_verschil_aantal, TEAM_studenten_aantal, TEAM_aantal_eerstejaars)

teams_enrollments <- enrollments_combined_filtered |>
    count(TEAM_naam, COHORT_naam)

teams_enrollments_2 <- enrollments_combined_filtered_2 |>
    count(TEAM_naam, COHORT_startjaar)

test_teams_2 <- test_teams |> full_join(teams_enrollments_2, by = c("TEAM_naam", "COHORT_startjaar")) |>
    rename(TEAM_studenten_aantal_2 = n) |>
    mutate(TEAM_verschil_aantal_2 = TEAM_studenten_aantal_2 - TEAM_aantal_eerstejaars) |>
    select(
        TEAM_naam,
        COHORT_startjaar,
        TEAM_verschil_aantal,
        TEAM_verschil_aantal_2,
        TEAM_studenten_aantal,
        TEAM_studenten_aantal_2,
        TEAM_aantal_eerstejaars
    )


```

## Jaar- en diploma-resultaat test

Jaar en dipoma resultaat.

-   Jaar resultaat: https://www.informatie-encyclopedie.nl/indicator/ed395a2e-d2b7-42d1-b726-b1d091ca73f4

    -   <https://www.informatie-encyclopedie.nl/populatie/05cf1d63-f77a-4187-90fa-a0a11eb539af>

-   Diplomaresultaat: https://www.informatie-encyclopedie.nl/indicator/27693a2c-23ad-4d12-871b-10edecc4e6a4

    -   Populatie: https://www.informatie-encyclopedie.nl/populatie/a01b2b0f-c574-4f62-9bfb-064b0406f8ca

![](images/clipboard-110045707.png)

Links is definitie populatie Diplomaresultaat en rechts jaarresultaat. Links staat dat zij-instromers niet in populatie zitten, rechts staat dat er ook studenten bij zitten die na 1 oktober zijn ingeschreven. Als ik vervolgens kijk welke opleidingen veel en weinig na-inschrijvingen hebben, dan lijkt dat best overeen te komen met welke opleidingen veel en weinig verschillen hebben tussen diploma en jaar noemer

```{r}

teams_aantallen <- teams |>
    filter(COHORT_naam != "2019/2020") |>
    select(TEAM_naam,
           COHORT_naam,
           TEAM_aantal_verlaters_diploma,
           TEAM_aantal_verlaters_jaar) |>
    mutate(Aantal_verschil = TEAM_aantal_verlaters_diploma - TEAM_aantal_verlaters_jaar)

```

```{r}

noemer_test <- enrollments_combined_enriched |>
    filter(COHORT_startjaar >= 2020,
           COHORT_startjaar <= 2023) |>
    filter(VERBINTENIS_niveau > 1) |>
    count(TEAM_naam, COHORT_naam, VERBINTENIS_actief_op_1_okt_peildatum) |>
        complete(
        TEAM_naam, 
        COHORT_naam,
        VERBINTENIS_actief_op_1_okt_peildatum = c(TRUE, FALSE, NA),
        fill = list(n = 0)
    ) |>
    filter(VERBINTENIS_actief_op_1_okt_peildatum %in% c(FALSE))


```



## Ambtshalve uitschrijvingen
```{r}

enrollments_combined_enriched_ambt <- enrollments_combined_enriched %>%
    filter(VERBINTENIS_reden_uitschrijving == "Ambtshalve") %>%
    mutate(totale_duur_dagen = as.numeric(
        difftime(
            VERBINTENIS_einddatum,
            VERBINTENIS_begindatum
        ),
        units = "days"
    )) %>%
    mutate(maand_uitschrijving = month(VERBINTENIS_einddatum))

tabyl(enrollments_combined_enriched_ambt$maand_uitschrijving)
tabyl(enrollments_combined_enriched_ambt$totale_duur_dagen) %>% arrange(desc(n)) %>% head(10)

```

## Sport en bewegen

```{r}

test <- enrollments_combined_filtered |>
    filter(TEAM_naam_afk == "AELT") |>
    count(OPLEIDING_naam, OPLEIDING_bc_label)

test2 <- enrollments_combined_filtered |>
    filter(TEAM_naam_afk == "ATRC") |>
    count(TEAM_naam, OPLEIDING_naam, OPLEIDING_bc_label)

```

## 


```{r}





```

